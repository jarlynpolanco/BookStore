@page "/authors/view/{Id}"

@inject IAuthorRepository _authorRepo
@inject NavigationManager _navManager

<h3>View Authors Details</h3>

@if (Model == null)
{
    <LoadingMessage Message="Loading Author Details"/>
}
else 
{
<div class="col-md-4">
    <table class="table table-responsive">
        <tr>
            <td>First Name</td>
            <td>@Model.Firstname</td>
        </tr>
        <tr>
            <td>Last Name</td>
            <td>@Model.Lastname</td>
        </tr>
        <tr>
            <td>Biography</td>
            <td>@Model.Bio</td>
        </tr>
    </table>
    <br />
    @if (Model.Books == null || Model.Books.Count == 0)
    {
        <div class="alert alert-dismissible alert-secondary">
            No Books for this Author
        </div>
    }
    else
    {
        <div class="card" style="width: 18rem;">
            <div class="card-header">
                <h4>Authors's Books</h4>
            </div>
            <ul class="list-group list-group-flush">
                @foreach (var book in Model.Books)
                {
                    <li class="list-group-item"><b>@book.Title</b> - @book.Price </li>
                }
            </ul>
        </div>
    }

</div>
}
<br />

<button @onclick="GoToEdit" class="btn btn-outline-warning">
    <span class="oi oi-pencil"></span>
    Edit Author
</button>

<button @onclick="GoToDelete" class="btn btn-outline-danger">
    <span class="oi oi-circle-x"></span>
    Delete Author
</button>

<button @onclick="BackToList" class="btn btn-outline-secondary">
    <span class="oi oi-media-skip-backward"></span>
    Back To List
</button>

@code {
    [Parameter]
    public string Id { get; set; }

    private Author Model = new Author();

    protected override async Task OnInitializedAsync()
    {
        Model = await _authorRepo.Get(Endpoints.AuthorsEndpoint, int.Parse(this.Id));
    }

    public void GoToEdit()
    {
        _navManager.NavigateTo($"/authors/edit/{Model.Id}");
    }

    public void GoToDelete()
    {
        _navManager.NavigateTo($"/authors/delete/{Model.Id}");
    }

    private void BackToList()
    {
        _navManager.NavigateTo("/authors/");
    }
}
