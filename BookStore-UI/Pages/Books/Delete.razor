@page "/books/delete/{Id}"

@attribute [Authorize(Roles = "Administrator")]

@inject IBookRepository _bookRepo
@inject IFileUpload _fileUpload
@inject NavigationManager _navManager
@inject IToastService _toastService

<h3 class="card-title">Are you sure you want to delete this record?</h3>
<hr />
<br />
@if (!isSuccess)
{
    _toastService.ShowError("Something went wrong with the elimination");
}
@if (string.IsNullOrWhiteSpace(Id) || int.Parse(Id) == 0)
{
    <ErrorMessage Message="Invalid selection. Please try again" />
}
else if (Model == null)
{
    <LoadingMessage Message="Loading Books Details" />
}
else
{
    <div class="row">
        <div class="col-md-6">
            <table class="table table-responsive">
                <tr>
                    <td>
                        <strong>Title</strong>
                    </td>
                    <td>@Model.Title</td>
                </tr>
                <tr>
                    <td>
                        <strong>Author</strong>
                    </td>
                    <td>
                        @if (Model.Author == null)
                        {
                            <span class="text-muted">No author recorded</span>
                        }
                        else
                        {
                            <a href="/authors/view/@Model.AuthorId"> @Model.Author.Firstname @Model.Author.Lastname</a>
                        }
                    </td>
                </tr>
                <tr>
                    <td>
                        <strong>Summary</strong>
                    </td>
                    <td>@Model.Summary</td>
                </tr>
                <tr>
                    <td>
                        <strong>Published Year</strong>
                    </td>
                    <td>@Model.Year</td>
                </tr>
                <tr>
                    <td>
                        <strong>ISBN</strong>
                    </td>
                    <td>@Model.Isbn</td>
                </tr>
            </table>
        </div>
        <div class="col-md-4">
            <img src="uploads/@Model.Image" style="height:300px; width:300px" />
            <h3 class="text-center text-info">@Model.Price</h3>
        </div>
    </div>
}
<br />

<button @onclick="DeleteBook" class="btn btn-danger">
    <span class="oi oi-delete"></span>
    Delete book
</button>

<button @onclick="BackToList" class="btn btn-outline-secondary" type="submit">
    <span class="oi oi-media-skip-backward"></span>
    Back to list
</button>

@code {
    [Parameter]
    public string Id { get; set; }
    private bool isSuccess = true;

    private Book Model = new Book();

    protected override async Task OnInitializedAsync()
    {
        Model = await _bookRepo.Get(Endpoints.BooksEndpoint, int.Parse(Id));
    }

    private async Task DeleteBook()
    {
        _fileUpload.RemoveFile(Model.Image);
        isSuccess = await _bookRepo.Delete(Endpoints.BooksEndpoint, Model.Id);

        if (isSuccess)
        {
            _toastService.ShowSuccess("Book's deleted successfully");
            BackToList();
        }
    }

    private void BackToList()
    {
        _navManager.NavigateTo("/books/");
    }

}
